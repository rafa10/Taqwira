<?php

namespace AppBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity
 * @ORM\Table(name="effective")
 * @ORM\HasLifecycleCallbacks
 */
class Effectif
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @Assert\NotBlank(message="Please provide a firstname")
     * @Assert\Regex(
     *     pattern     = "/^[a-zàâçéèêëîïôûùüÿñæœ .-]*$/i",
     *     htmlPattern = "^[a-zA-Z]+$"
     * )
     */
    private $firstname;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @Assert\NotBlank(message="Please provide a lastname")
     * @Assert\Regex(
     *     pattern     = "/^[a-zàâçéèêëîïôûùüÿñæœ .-]*$/i",
     *     htmlPattern = "^[a-zA-Z]+$"
     * )
     */
    private $lastname;

    /**
     * @ORM\Column(type="string", length=10, nullable=true)
     */
    private $sexe;

    /**
     * @ORM\Column(type="date", nullable=true)
     * @Assert\NotBlank(message="Please provide an dob")
     */
    private $dob;

    /**
     * @ORM\Column(type="string", length=50, nullable=true)
     * @Assert\NotBlank(message="Please provide an email")
     * @Assert\Email()
     */
    private $email;

    /**
     * @ORM\Column(type="string", length=10, nullable=true)
     * @Assert\NotBlank(message="Please provide a phone")
     */
    private $phone;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     * @Assert\NotBlank(message="Please provide a address")
     */
    private $address;

    /**
     * @ORM\Column(type="string", length=100, nullable=true)
     * @Assert\NotBlank(message="Please provide an function")
     */
    private $function;

    /**
     * @ORM\Column(type="integer", length=3, nullable=true)
     * @Assert\NotBlank(message="Please provide an function")
     */
    private $weight;

    /**
     * @ORM\Column(type="float", nullable=true)
     * @Assert\NotBlank(message="Please provide an function")
     */
    private $size;

    /**
     * @ORM\Column(type="string", length=100, nullable=true)
     * @Assert\NotBlank(message="Please provide an function")
     */
    private $school_level;

    /**
     * @ORM\Column(type="text", length=100, nullable=true)
     * @Assert\NotBlank(message="Please provide an function")
     */
    private $educational_establishment;

    // ..........

    /**
     * @var datetime $created
     * @ORM\Column(type="datetime")
     */
    protected $created;

    /**
     * @var datetime $updated
     * @ORM\Column(type="datetime", nullable = true)
     */
    protected $updated;

    /**
     * Gets triggered only on insert
     * @ORM\PrePersist
     */
    public function onPrePersist()
    {
        $this->created = new \DateTime("now");
    }

    /**
     * Gets triggered every time on update
     * @ORM\PreUpdate
     */
    public function onPreUpdate()
    {
        $this->updated = new \DateTime("now");
    }

    // ..........

    /**
     * @ORM\ManyToOne(targetEntity="AppBundle\Entity\Center", inversedBy="effectif")
     * @ORM\JoinColumn(name="center_id", referencedColumnName="id", onDelete="CASCADE")
     */
    private $center;

    /**
     * @return mixed
     */
    public function __toString()
    {
        return $this->email;
    }

}
